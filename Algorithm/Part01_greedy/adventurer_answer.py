# 모험가 길드에서는 N명의 모험가를 대상으로 '공포도'를 측정했는데,
# '공포도'가 높은 모험가는 쉽게 공포를 느껴 위험 상황에서 제대로 대처할 능력이 떨어진다.
# 공포도가 X인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참가해야 한다.
# N명의 모험가에 대한 정보가 주어졌을 때, 여행을 떠날 수 있는 그룹 수의 최댓값을 구하시오.
# ex. N = 5, 공포도 = [2, 3, 1, 2, 2]
# => 그룸 1에 공포도가 1, 2, 3 + 그룹 2에 공포도가 2인 두 명

n = int(input())
data = list(map(int, input().split()))
data.sort()

res = 0 # 총 그룹의 수
count = 0 # 현재 그룹에 포함된 모험가의 수

for i in data: # 공포도를 낮은 것부터 하나씩 확인하며
    count += 1 # 현재 그룹에 해당 모험가를 포함시키기
    if count >= i: # 현재 그룹에 포함된 모험가의 수가 현재 공포도 이상이라면 그룹 결성
        res += 1 # 총 그룹의 수 증가시키기
        count = 0 # 현재 그룹에 포함된 모험가의 수 초기화
        
print(res) # 총 그룹의 수 출력